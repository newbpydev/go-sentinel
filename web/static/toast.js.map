{"version":3,"file":"toast.js","sources":["js/src/toast.ts"],"sourcesContent":["// Toast notification system for Go Sentinel\r\n// This script provides toast notifications for both HTMX events and direct JS calls\r\n\r\n// Define toast types for better type safety\r\ntype ToastType = 'success' | 'error' | 'warning' | 'info';\r\n\r\n// Define the toast interface for global usage\r\ninterface ToastAPI {\r\n    success(message: string, timeout?: number): void;\r\n    error(message: string, timeout?: number): void;\r\n    warning(message: string, timeout?: number): void;\r\n    info(message: string, timeout?: number): void;\r\n}\r\n\r\n// Create toast container if it doesn't exist\r\nexport let toastContainer: HTMLElement | null = null;\r\n\r\n// For testing purposes\r\nif (typeof window !== 'undefined') {\r\n  // @ts-ignore - Allow setting toastContainer for testing\r\n  window.__TEST_TOAST_CONTAINER__ = {\r\n    set: (value: HTMLElement | null) => { toastContainer = value; },\r\n    get: () => toastContainer,\r\n    reset: resetToastState\r\n  };\r\n}\r\n\r\n// Define the Toast object with all public methods\r\nconst Toast = {\r\n  showToast,\r\n  ensureContainer: () => {\r\n    ensureToastContainer();\r\n    return toastContainer;\r\n  },\r\n  createToast,\r\n  removeToast,\r\n  resetState: resetToastState,\r\n  get container() {\r\n    return toastContainer;\r\n  },\r\n  // Add test utilities to the Toast object\r\n  __test__: {\r\n    resetToastState,\r\n    createToast,\r\n    removeToast,\r\n    ensureToastContainer: () => ensureToastContainer(),\r\n    getToastContainer: () => toastContainer\r\n  }\r\n} as const;\r\n\r\n// Export the Toast object and types\r\nexport { Toast };\r\nexport type { ToastAPI, ToastType };\r\n\r\n// Export test utilities for testing\r\nexport const __test__ = Toast.__test__;\r\n\r\n// Expose test utilities globally for testing\r\nif (typeof window !== 'undefined') {\r\n  (window as any).__TEST_TOAST_UTILS__ = __test__;\r\n}\r\n\r\n/**\r\n * Reset the toast state for testing purposes\r\n * Clears the toast container and removes it from the DOM\r\n * @internal\r\n */\r\nexport function resetToastState() {\r\n    if (toastContainer && toastContainer.parentNode) {\r\n        toastContainer.parentNode.removeChild(toastContainer);\r\n    }\r\n    toastContainer = null;\r\n}\r\n\r\n\r\n/**\r\n * Show a toast notification\r\n * @param message - The message to display\r\n * @param type - The type of toast (success, error, warning, info)\r\n * @param timeout - Time in milliseconds before the toast auto-dismisses\r\n */\r\nexport function showToast(message: string, type: ToastType = 'info', timeout: number = 3000): void {\r\n    ensureToastContainer();\r\n    createToast(type, message, timeout);\r\n}\r\n\r\n/**\r\n * Remove a toast with animation\r\n * @param toast - The toast element to remove\r\n * @export Exported for testing purposes\r\n */\r\nexport function removeToast(toast: HTMLElement): void {\r\n    if (!toast) return;\r\n    \r\n    toast.classList.remove('visible');\r\n    \r\n    // Remove from DOM after animation completes\r\n    setTimeout(() => {\r\n        if (toast && toast.parentNode) {\r\n            toast.parentNode.removeChild(toast);\r\n        }\r\n    }, 300); // Match this to your CSS transition time\r\n}\r\n\r\n/**\r\n * Create and show a toast notification\r\n * @export Exported for testing purposes\r\n */\r\nexport function createToast(level: ToastType, message: string, timeout: number = 3000): HTMLElement {\r\n    // Ensure container exists\r\n    const container = ensureToastContainer();\r\n    \r\n    // Create toast element\r\n    const toast = document.createElement('div');\r\n    toast.className = `toast toast-${level} visible`;\r\n    toast.setAttribute('role', 'alert');\r\n    toast.setAttribute('aria-live', 'assertive');\r\n    toast.setAttribute('aria-atomic', 'true');\r\n\r\n    // Create icon based on level\r\n    const icon = document.createElement('span');\r\n    icon.className = 'toast-icon';\r\n    \r\n    // Set appropriate icon class based on level\r\n    switch (level) {\r\n        case 'success':\r\n            icon.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>';\r\n            break;\r\n        case 'error':\r\n            icon.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line></svg>';\r\n            break;\r\n        case 'warning':\r\n            icon.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line></svg>';\r\n            break;\r\n        default: // info\r\n            icon.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line></svg>';\r\n            break;\r\n    }\r\n    \r\n    // Create content\r\n    const content = document.createElement('div');\r\n    content.className = 'toast-content';\r\n    content.innerHTML = message;\r\n    \r\n    // Create close button\r\n    const closeBtn = document.createElement('button');\r\n    closeBtn.className = 'toast-close';\r\n    closeBtn.innerHTML = 'Ã—';\r\n    closeBtn.setAttribute('aria-label', 'Close notification');\r\n    closeBtn.onclick = () => removeToast(toast);\r\n    \r\n    // Assemble toast\r\n    toast.appendChild(icon);\r\n    toast.appendChild(content);\r\n    toast.appendChild(closeBtn);\r\n    \r\n    // Add to container\r\n    container.appendChild(toast);\r\n    \r\n    // Auto-dismiss after timeout\r\n    if (timeout > 0) {\r\n        setTimeout(() => removeToast(toast), timeout);\r\n    }\r\n    \r\n    return toast;\r\n}\r\n\r\n/**\r\n * Ensures the toast container exists in the DOM\r\n * @returns The toast container element\r\n * @export Exported for testing purposes\r\n */\r\nexport function ensureToastContainer(): HTMLElement {\r\n    if (toastContainer && document.body.contains(toastContainer)) {\r\n        return toastContainer;\r\n    }\r\n    \r\n    // Check if container exists in the DOM but isn't in our reference\r\n    const existingContainer = document.getElementById('toast-container');\r\n    if (existingContainer) {\r\n        existingContainer.id = 'toast-container';\r\n        existingContainer.className = 'toast-container';\r\n        toastContainer = existingContainer;\r\n        return toastContainer;\r\n    }\r\n    \r\n    // Create a new container if none exists\r\n    toastContainer = document.createElement('div');\r\n    toastContainer.id = 'toast-container';\r\n    toastContainer.className = 'toast-container';\r\n    document.body.appendChild(toastContainer);\r\n    \r\n    return toastContainer;\r\n}\r\n\r\n// Initialize the toast system when the DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    ensureToastContainer();\r\n    \r\n    // Create the toast API\r\n    const toast: ToastAPI = {\r\n        success: (message: string, timeout: number = 3000) => showToast(message, 'success', timeout),\r\n        error: (message: string, timeout: number = 5000) => showToast(message, 'error', timeout),\r\n        warning: (message: string, timeout: number = 4000) => showToast(message, 'warning', timeout),\r\n        info: (message: string, timeout: number = 3000) => showToast(message, 'info', timeout)\r\n    };\r\n    \r\n    // Expose the toast object globally\r\n    (window as any).toast = toast;\r\n});\r\n\r\n// Export default toast API creator function for direct imports\r\nexport function createToastAPI(): ToastAPI {\r\n    ensureToastContainer();\r\n    return {\r\n        success: (message: string, timeout: number = 3000) => showToast(message, 'success', timeout),\r\n        error: (message: string, timeout: number = 5000) => showToast(message, 'error', timeout),\r\n        warning: (message: string, timeout: number = 4000) => showToast(message, 'warning', timeout),\r\n        info: (message: string, timeout: number = 3000) => showToast(message, 'info', timeout)\r\n    };\r\n}\r\n"],"names":["toastContainer","value","resetToastState","Toast","createToast","removeToast","ensureToastContainer","__test__","showToast","message","type","timeout","toast","level","container","icon","content","closeBtn","existingContainer"],"mappings":"AAeO,IAAIA,EAAqC,KAG5C,OAAO,OAAW,MAEpB,OAAO,yBAA2B,CAChC,IAAMC,GAA8B,CAAmBD,EAAAC,CAAO,EAC9D,IAAK,IAAMD,EACX,MAAOE,CACT,GAIF,MAAMC,EAAQ,CAaZ,SAAU,CACR,gBAAAD,EACA,YAAAE,EACA,YAAAC,EACA,qBAAsB,IAAMC,EAAqB,EACjD,kBAAmB,IAAMN,CAAA,CAE7B,EAOaO,EAAWJ,EAAM,SAG1B,OAAO,OAAW,MACnB,OAAe,qBAAuBI,GAQlC,SAASL,GAAkB,CAC1BF,GAAkBA,EAAe,YAClBA,EAAA,WAAW,YAAYA,CAAc,EAEvCA,EAAA,IACrB,CASO,SAASQ,EAAUC,EAAiBC,EAAkB,OAAQC,EAAkB,IAAY,CAC1EL,EAAA,EACTF,EAAAM,EAAMD,EAASE,CAAO,CACtC,CAOO,SAASN,EAAYO,EAA0B,CAC7CA,IAECA,EAAA,UAAU,OAAO,SAAS,EAGhC,WAAW,IAAM,CACTA,GAASA,EAAM,YACTA,EAAA,WAAW,YAAYA,CAAK,GAEvC,GAAG,EACV,CAMO,SAASR,EAAYS,EAAkBJ,EAAiBE,EAAkB,IAAmB,CAEhG,MAAMG,EAAYR,EAAqB,EAGjCM,EAAQ,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAY,eAAeC,CAAK,WAChCD,EAAA,aAAa,OAAQ,OAAO,EAC5BA,EAAA,aAAa,YAAa,WAAW,EACrCA,EAAA,aAAa,cAAe,MAAM,EAGlC,MAAAG,EAAO,SAAS,cAAc,MAAM,EAI1C,OAHAA,EAAK,UAAY,aAGTF,EAAO,CACX,IAAK,UACDE,EAAK,UAAY,sSACjB,MACJ,IAAK,QACDA,EAAK,UAAY,4TACjB,MACJ,IAAK,UACDA,EAAK,UAAY,oYACjB,MACJ,QACIA,EAAK,UAAY,iUACjB,KAAA,CAIF,MAAAC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,gBACpBA,EAAQ,UAAYP,EAGd,MAAAQ,EAAW,SAAS,cAAc,QAAQ,EAChD,OAAAA,EAAS,UAAY,cACrBA,EAAS,UAAY,IACZA,EAAA,aAAa,aAAc,oBAAoB,EAC/CA,EAAA,QAAU,IAAMZ,EAAYO,CAAK,EAG1CA,EAAM,YAAYG,CAAI,EACtBH,EAAM,YAAYI,CAAO,EACzBJ,EAAM,YAAYK,CAAQ,EAG1BH,EAAU,YAAYF,CAAK,EAGvBD,EAAU,GACV,WAAW,IAAMN,EAAYO,CAAK,EAAGD,CAAO,EAGzCC,CACX,CAOO,SAASN,GAAoC,CAChD,GAAIN,GAAkB,SAAS,KAAK,SAASA,CAAc,EAChD,OAAAA,EAIL,MAAAkB,EAAoB,SAAS,eAAe,iBAAiB,EACnE,OAAIA,GACAA,EAAkB,GAAK,kBACvBA,EAAkB,UAAY,kBACblB,EAAAkB,EACVlB,IAIMA,EAAA,SAAS,cAAc,KAAK,EAC7CA,EAAe,GAAK,kBACpBA,EAAe,UAAY,kBAClB,SAAA,KAAK,YAAYA,CAAc,EAEjCA,EACX,CAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAC3BM,EAAA,EAGrB,MAAMM,EAAkB,CACpB,QAAS,CAACH,EAAiBE,EAAkB,MAASH,EAAUC,EAAS,UAAWE,CAAO,EAC3F,MAAO,CAACF,EAAiBE,EAAkB,MAASH,EAAUC,EAAS,QAASE,CAAO,EACvF,QAAS,CAACF,EAAiBE,EAAkB,MAASH,EAAUC,EAAS,UAAWE,CAAO,EAC3F,KAAM,CAACF,EAAiBE,EAAkB,MAASH,EAAUC,EAAS,OAAQE,CAAO,CACzF,EAGC,OAAe,MAAQC,CAC5B,CAAC"}