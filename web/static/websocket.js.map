{"version":3,"file":"websocket.js","sources":["js/src/websocket.ts"],"sourcesContent":["// WebSocket client implementation\r\nexport class WebSocketClient {\r\n  private socket: WebSocket | null = null;\r\n  private url: string;\r\n  private reconnectAttempts: number = 0;\r\n  private maxReconnectAttempts: number = 5;\r\n  private reconnectDelay: number = 1000; // Start with 1 second\r\n  private maxReconnectDelay: number = 30000; // Max 30 seconds\r\n  private connectHandlers: ((event?: Event) => void)[] = [];\r\n  private messageHandlers: ((data: any) => void)[] = [];\r\n  private disconnectHandlers: ((event?: CloseEvent) => void)[] = [];\r\n  private errorHandlers: ((error: Event) => void)[] = [];\r\n  private onOpen?: () => void; // Legacy handler\r\n  \r\n  constructor(url: string) {\r\n    this.url = url;\r\n    this._connect();\r\n  }\r\n\r\n  private _connect(): void {\r\n    if (!this.url) {\r\n      console.error('WebSocket URL not provided');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.socket = new WebSocket(this.url);\r\n\r\n      this.socket.onopen = (event: Event) => {\r\n        this.reconnectAttempts = 0;\r\n        this.reconnectDelay = 1000; // Reset delay on successful connection\r\n        this.connectHandlers.forEach(handler => handler(event));\r\n        \r\n        // Call onOpen handler if set (for backward compatibility)\r\n        if (this.onOpen) this.onOpen();\r\n      };\r\n\r\n      this.socket.onmessage = (event: MessageEvent) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          this.messageHandlers.forEach(handler => handler(data));\r\n        } catch (error) {\r\n          console.error('Error parsing WebSocket message:', error);\r\n          this.errorHandlers.forEach(handler => \r\n            handler(new ErrorEvent('error', { error, message: 'Failed to parse message' }))\r\n          );\r\n        }\r\n      };\r\n\r\n      this.socket.onclose = (event: CloseEvent) => {\r\n        this.disconnectHandlers.forEach(handler => handler(event));\r\n        \r\n        // Don't reconnect if close was clean and intended\r\n        if (!event.wasClean) {\r\n          this._reconnect();\r\n        }\r\n      };\r\n\r\n      this.socket.onerror = (error: Event) => {\r\n        console.error('WebSocket error:', error);\r\n        this.errorHandlers.forEach(handler => handler(error));\r\n      };\r\n    } catch (error) {\r\n      console.error('Error creating WebSocket connection:', error);\r\n      this._reconnect();\r\n    }\r\n  }\r\n\r\n  private _reconnect(): void {\r\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n      console.error('Max reconnection attempts reached');\r\n      return;\r\n    }\r\n\r\n    this.reconnectAttempts++;\r\n    const delay = Math.min(this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1), this.maxReconnectDelay);\r\n    \r\n    console.log(`Reconnecting in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\r\n    \r\n    setTimeout(() => {\r\n      this._connect();\r\n    }, delay);\r\n  }\r\n\r\n  public send(data: any): void {\r\n    if (!this.socket || this.socket.readyState !== WebSocket.OPEN) {\r\n      console.error('WebSocket is not connected');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const message = typeof data === 'string' ? data : JSON.stringify(data);\r\n      this.socket.send(message);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      this.errorHandlers.forEach(handler => \r\n        handler(new ErrorEvent('error', { error, message: 'Failed to send message' }))\r\n      );\r\n    }\r\n  }\r\n\r\n  public onConnect(handler: (event?: Event) => void): void {\r\n    this.connectHandlers.push(handler);\r\n  }\r\n\r\n  public onMessage(handler: (data: any) => void): void {\r\n    this.messageHandlers.push(handler);\r\n  }\r\n\r\n  public onDisconnect(handler: (event?: CloseEvent) => void): void {\r\n    this.disconnectHandlers.push(handler);\r\n  }\r\n\r\n  public onError(handler: (error: Event) => void): void {\r\n    this.errorHandlers.push(handler);\r\n  }\r\n\r\n  public disconnect(): void {\r\n    if (this.socket) {\r\n      this.socket.close(1000, 'Client disconnected');\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  public isConnected(): boolean {\r\n    return this.socket !== null && this.socket.readyState === WebSocket.OPEN;\r\n  }\r\n\r\n  public getState(): number {\r\n    return this.socket ? this.socket.readyState : WebSocket.CLOSED;\r\n  }\r\n}\r\n\r\nexport default WebSocketClient;\r\n"],"names":["WebSocketClient","url","event","handler","data","error","delay","message"],"mappings":"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"}