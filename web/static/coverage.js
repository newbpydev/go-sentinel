let r=null,h=null,I=null;function v(){document.querySelectorAll(".metric-fill[data-percentage]").forEach(t=>{const e=t.getAttribute("data-percentage");e&&(t.style.width=`${e}%`)})}function L(t){return t>=90?"high":t>=70?"medium":t>=50?"low":"very-low"}function $(t,e="all",n=""){var c;(c=window.htmx)!=null&&c.ajax&&window.htmx.ajax("GET",`/api/coverage/files?page=${t}&filter=${e}&search=${n}`,{target:"#coverage-list"})}window.setMetricFillWidths=v;window.getCoverageClass=L;window.goToPage=$;globalThis.setMetricFillWidths=v;document.addEventListener("DOMContentLoaded",()=>{v(),r=document.getElementById("file-details"),h=document.getElementById("close-details"),I=new MutationObserver(i=>{for(const a of i)a.type==="childList"&&a.addedNodes.length>0&&v()});const t=document.querySelector(".coverage-dashboard");t&&I.observe(t,{childList:!0,subtree:!0}),window.showFileDetails=i=>{r&&(r.classList.add("active"),r.style.display="block",i&&c(i))},h&&r&&h.addEventListener("click",()=>{r&&(r.classList.remove("active"),r.style.display="none")}),document.addEventListener("keydown",i=>{r&&r.style.display==="block"&&h&&i.key==="Escape"&&h.click()});const e=document.getElementById("coverage-threshold");e&&e.addEventListener("change",()=>{u(e.value)});const n=document.getElementById("coverage-filter");n&&n.addEventListener("input",function(){const i=n.value.toLowerCase(),a=document.querySelectorAll(".file-row");let l=0;a.forEach(function(f){var y,x;const p=((y=f.getAttribute("data-path"))==null?void 0:y.toLowerCase())||"",d=((x=f.getAttribute("data-name"))==null?void 0:x.toLowerCase())||"";p.includes(i)||d.includes(i)?(f.style.display="",l++):f.style.display="none"}),u(i);const g=document.getElementById("visible-files-count");g&&(g.textContent=l.toString())});function c(i){var a;!((a=window.htmx)!=null&&a.ajax)||!r||(r.innerHTML='<div class="loading">Loading file details...</div>',window.htmx.ajax("GET",`/api/coverage/files/${encodeURIComponent(i)}`,{target:"#file-details",swap:"innerHTML"}))}function o(i,a){const l=document.getElementById(i);if(!l)return;const g=l.querySelector(".metric-percentage"),f=l.querySelector(".metric-fill"),p=l.querySelector(".metric-ratio");g&&(g.textContent=a.percentage.toFixed(2)+"%"),f&&(f.style.width=a.percentage+"%",f.className="metric-fill "+L(a.percentage)),p&&(p.textContent=`${a.covered}/${a.total}`)}function u(i){const a=document.getElementById("filter-indicator");a&&(a.style.display=i?"inline-block":"none")}typeof window.htmx<"u"&&window.htmx.createWebSocket&&document.body.addEventListener("coverage-updated",function(i){const a=i;if(a.detail&&a.detail.data){const l=a.detail.data;o("summary-statements",l.summary.statements),o("summary-branches",l.summary.branches),o("summary-functions",l.summary.functions),o("summary-lines",l.summary.lines);const g=document.getElementById("coverage-file-list");if(g&&l.files){g.innerHTML="",l.files.forEach(d=>{const y=document.createElement("tr");y.className=`file-row ${d.status}`,y.setAttribute("data-path",d.path),y.setAttribute("data-name",d.name),y.innerHTML=`
              <td class="file-name">${d.name}</td>
              <td class="file-path">${d.path}</td>
              <td class="metric">${d.statements.percentage.toFixed(2)}%</td>
              <td class="metric">${d.branches.percentage.toFixed(2)}%</td>
              <td class="metric">${d.functions.percentage.toFixed(2)}%</td>
              <td class="metric">${d.lines.percentage.toFixed(2)}%</td>
            `,y.addEventListener("click",()=>{window.showFileDetails(d.path)}),g.appendChild(y)});const f=document.getElementById("total-files-count");f&&(f.textContent=l.files.length.toString());const p=document.getElementById("coverage-filter");if(p&&p.value){const d=new Event("input");p.dispatchEvent(d)}}}});const s=1;function m(){console.debug(`Using pagination: page ${s}`)}m()});const w=document.getElementById("coverage-threshold");w&&w.addEventListener("change",()=>{C(w.value)});const b=document.getElementById("coverage-filter");b&&b.addEventListener("input",function(){const t=b.value.toLowerCase(),e=document.querySelectorAll(".file-row");let n=0;e.forEach(function(o){var m,i;const u=((m=o.getAttribute("data-path"))==null?void 0:m.toLowerCase())||"",s=((i=o.getAttribute("data-name"))==null?void 0:i.toLowerCase())||"";u.includes(t)||s.includes(t)?(o.style.display="",n++):o.style.display="none"}),C(t);const c=document.getElementById("visible-files-count");c&&(c.textContent=n.toString())});function E(t,e){const n=document.getElementById(t);if(!n)return;const c=n.querySelector(".metric-percentage"),o=n.querySelector(".metric-fill"),u=n.querySelector(".metric-ratio");c&&(c.textContent=e.percentage.toFixed(2)+"%"),o&&(o.style.width=e.percentage+"%",o.className="metric-fill "+L(e.percentage)),u&&(u.textContent=`${e.covered}/${e.total}`)}function C(t){const e=document.getElementById("filter-indicator");e&&(e.style.display=t?"inline-block":"none")}typeof window.htmx<"u"&&window.htmx.createWebSocket&&document.body.addEventListener("coverage-updated",function(t){const e=t;if(e.detail&&e.detail.data){const n=e.detail.data;E("summary-statements",n.summary.statements),E("summary-branches",n.summary.branches),E("summary-functions",n.summary.functions),E("summary-lines",n.summary.lines);const c=document.getElementById("coverage-file-list");if(c&&n.files){c.innerHTML="",n.files.forEach(s=>{const m=document.createElement("tr");m.className=`file-row ${s.status}`,m.setAttribute("data-path",s.path),m.setAttribute("data-name",s.name),m.innerHTML=`
            <td class="file-name">${s.name}</td>
            <td class="file-path">${s.path}</td>
            <td class="metric">${s.statements.percentage.toFixed(2)}%</td>
            <td class="metric">${s.branches.percentage.toFixed(2)}%</td>
            <td class="metric">${s.functions.percentage.toFixed(2)}%</td>
            <td class="metric">${s.lines.percentage.toFixed(2)}%</td>
          `,m.addEventListener("click",()=>{window.showFileDetails(s.path)}),c.appendChild(m)});const o=document.getElementById("total-files-count");o&&(o.textContent=n.files.length.toString());const u=document.getElementById("coverage-filter");if(u&&u.value){const s=new Event("input");u.dispatchEvent(s)}}}});
//# sourceMappingURL=coverage.js.map
