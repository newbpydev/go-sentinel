{{define "pages/history"}}
{{template "layouts/base" .}}
{{end}}

{{define "content"}}
<!-- Test run history section -->
<section class="recent-tests">
    <div class="section-header">
        <h2>Test Run History</h2>
        <button class="refresh-button" aria-label="Refresh history" hx-get="/api/history"
            hx-target="#history-container">
            Refresh
        </button>
    </div>
    <div id="history-container" class="test-table-container content-padding">
        <!-- This will be replaced by HTMX with actual history data -->
        <div class="flex justify-center items-center h-32">
            <div class="loading-spinner"></div>
        </div>

        <!-- Example of styled history items (will be replaced by actual data) -->
        <div class="history-item">
            <div class="history-item-header">
                <div class="history-item-title">Run #5 - May 13, 15:53</div>
                {{template "partials/status-badge" "passed"}}
            </div>
            <div class="history-item-stats">
                <div>Total: 128</div>
                <div>Passed: 119</div>
                <div>Failed: 9</div>
                <div>Time: 1.2s</div>
            </div>
            <div class="history-item-actions">
                <button class="btn btn-info">Details</button>
                <button class="btn btn-warning">Compare</button>
            </div>
        </div>

        <div class="history-item">
            <div class="history-item-header">
                <div class="history-item-title">Run #4 - May 13, 05:53</div>
                {{template "partials/status-badge" "passed"}}
            </div>
            <div class="history-item-stats">
                <div>Total: 125</div>
                <div>Passed: 120</div>
                <div>Failed: 5</div>
                <div>Time: 1.3s</div>
            </div>
            <div class="history-item-actions">
                <button class="btn btn-info">Details</button>
                <button class="btn btn-warning">Compare</button>
            </div>
        </div>
    </div>
</section>

<!-- Details section -->
<section class="recent-tests">
    <div class="section-header">
        <h2>Test Run Details</h2>
    </div>
    <div id="run-details" class="test-details-container content-padding">
        <div class="flex justify-center items-center h-32">
            <p class="text-slate-500">Select a test run to view details</p>
        </div>
    </div>
</section>

<!-- Comparison section -->
<section class="recent-tests hidden" id="comparison-section">
    <div class="section-header">
        <h2>Comparison Results</h2>
    </div>
    <div id="comparison-container" class="test-details-container content-padding">
        <div class="flex justify-center items-center h-32">
            <p class="text-slate-500">Select two test runs to compare</p>
        </div>
    </div>
</section>

{{if .ShowTestManagement}}
<!-- Test management section -->
{{template "partials/test-management" .}}
{{end}}

{{if .ShowTestConfiguration}}
<!-- Test configuration section -->
{{template "partials/test-configuration" .}}
{{end}}
{{end}}

{{define "scripts"}}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Load history on page load
        htmx.ajax('GET', '/api/history', { target: '#history-container' });

        // Toggle comparison container visibility
        document.addEventListener('click', function (event) {
            if (event.target.matches('.compare') || event.target.closest('.compare')) {
                document.getElementById('comparison-section').classList.remove('hidden');
            }
        });

        // Filter test results
        document.addEventListener('click', function (event) {
            if (event.target.matches('.filter-button')) {
                const filter = event.target.getAttribute('data-filter');
                const buttons = document.querySelectorAll('.filter-button');
                const testItems = document.querySelectorAll('.test-result-item');

                // Update active filter
                buttons.forEach(btn => btn.classList.remove('active'));
                event.target.classList.add('active');

                // Apply filter
                testItems.forEach(item => {
                    if (filter === 'all' || item.classList.contains(filter)) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            }
        });
    });
</script>
{{end}}